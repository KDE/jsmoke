OPTION(ENABLE_JSMOKE "build JSmoke" ON)
OPTION(ENABLE_QTCORE_JSMOKE "build QtCoreJSmoke" ON)
OPTION(ENABLE_QTNETWORK_JSMOKE "build QtNetworkJSmoke" ON)
OPTION(ENABLE_QTDBUS_JSMOKE "build QtDBusJSmoke" ON)
OPTION(ENABLE_QTGUI_JSMOKE "build QtGuiJSmoke" ON)
OPTION(ENABLE_QTSVG_JSMOKE "build QtSvgJSmoke" ON)
OPTION(ENABLE_QTSQL_JSMOKE "build QtSqlJSmoke" ON)
OPTION(ENABLE_QTXML_JSMOKE "build QtXmlJSmoke" ON)
OPTION(ENABLE_QTXMLPATTERNS_JSMOKE "build QtXmlPatternsJSmoke" ON)
OPTION(ENABLE_QTOPENGL_JSMOKE "build QtOpenGLJSmoke" ON)
OPTION(ENABLE_QTWEBKIT_JSMOKE "build QtWebKitJSmoke" ON)
OPTION(ENABLE_QTUITOOLS_JSMOKE "build QtUiToolsJSmoke" ON)
OPTION(ENABLE_QTMULTIMEDIA_JSMOKE "build QtMultimediaJSmoke" ON)
OPTION(ENABLE_QIMAGEBLITZ_JSMOKE "build QImageBlitzJSmoke" ON)
OPTION(ENABLE_KDECORE_JSMOKE "build KDECoreJSmoke" ON)
OPTION(ENABLE_KDEUI_JSMOKE "build KDEUiJSmoke" ON)
OPTION(ENABLE_KIO_JSMOKE "build KIOJSmoke" ON)
OPTION(ENABLE_KPARTS_JSMOKE "build KPartsJSmoke" ON)
OPTION(ENABLE_KFILE_JSMOKE "build KFileJSmoke" ON)
OPTION(ENABLE_KNEWSTUFF2_JSMOKE "build KNewStuff2" ON)
OPTION(ENABLE_KNEWSTUFF3_JSMOKE "build KNewStuff3" ON)
OPTION(ENABLE_KUTILS_JSMOKE "build KUtils" ON)
OPTION(ENABLE_KHTML_JSMOKE "build KHTMLJSmoke" ON)
OPTION(ENABLE_KTEXTEDITOR_JSMOKE "build KTextEditorJSmoke" ON)
OPTION(ENABLE_SOLID_JSMOKE "build SolidJSmoke" ON)
OPTION(ENABLE_PLASMA_JSMOKE "build PlasmaJSmoke" ON)
OPTION(ENABLE_NEPOMUK_JSMOKE "build NepomukJSmoke" ON)
OPTION(ENABLE_ATTICA_JSMOKE "build AtticaJSmoke" ON)
OPTION(ENABLE_PHONON_JSMOKE "build PhononJSmoke" ON)
OPTION(ENABLE_SOPRANO_JSMOKE "build SopranoJSmoke" ON)

set(JSMOKE_ENABLED "yes")
if(ENABLE_JSMOKE)
    add_definitions(-DJSMOKE_BUILDING)
    add_subdirectory(qtcore)
    set(JSMOKE_ENABLED "yes - QtCore")

    if(ENABLE_QTNETWORK_JSMOKE)
        add_subdirectory(qtnetwork)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtNetwork")
    endif(ENABLE_QTNETWORK_JSMOKE)

    if(ENABLE_QTDBUS_JSMOKE)
        add_subdirectory(qtdbus)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtDBus")
    endif(ENABLE_QTDBUS_JSMOKE)

    if(ENABLE_QTGUI_JSMOKE)
        add_subdirectory(qtgui)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtGui")
    endif(ENABLE_QTGUI_JSMOKE)

    if(ENABLE_QTSVG_JSMOKE)
        add_subdirectory(qtsvg)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtSvg")
    endif(ENABLE_QTSVG_JSMOKE)

    if(ENABLE_QTSQL_JSMOKE)
        add_subdirectory(qtsql)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtSql")
    endif(ENABLE_QTSQL_JSMOKE)

    if(ENABLE_QTXML_JSMOKE)
        add_subdirectory(qtxml)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtXml")
    endif(ENABLE_QTXML_JSMOKE)

    if(ENABLE_QTXMLPATTERNS_JSMOKE)
        add_subdirectory(qtxmlpatterns)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtXmlPatterns")
    endif(ENABLE_QTXMLPATTERNS_JSMOKE)

    if(ENABLE_QTOPENGL_JSMOKE)
        add_subdirectory(qtopengl)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtOpenGL")
    endif(ENABLE_QTOPENGL_JSMOKE)

    if(ENABLE_QTWEBKIT_JSMOKE)
        add_subdirectory(qtwebkit)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtWebKit")
    endif(ENABLE_QTWEBKIT_JSMOKE)

    if(ENABLE_QTUITOOLS_JSMOKE)
        add_subdirectory(qtuitools)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtUiTools")
    endif(ENABLE_QTUITOOLS_JSMOKE)

    if(ENABLE_QTMULTIMEDIA_JSMOKE)
        add_subdirectory(qtmultimedia)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QtMultimedia")
    endif(ENABLE_QTMULTIMEDIA_JSMOKE)

    if(ENABLE_QIMAGEBLITZ_JSMOKE)
        add_subdirectory(qimageblitz)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, QImageBlitz")
    endif(ENABLE_QIMAGEBLITZ_JSMOKE)

    if(ENABLE_SOLID_JSMOKE)
        add_subdirectory(solid)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Solid")
    endif(ENABLE_SOLID_JSMOKE)

    if(ENABLE_PLASMA_JSMOKE)
      add_subdirectory(plasma)
      set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Plasma")
    endif(ENABLE_PLASMA_JSMOKE)

    if(ENABLE_KDECORE_JSMOKE)
        add_subdirectory(kdecore)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KDECore")
    endif(ENABLE_KDECORE_JSMOKE)

    if(ENABLE_KDEUI_JSMOKE)
        add_subdirectory(kdeui)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KDEUi")
    endif(ENABLE_KDEUI_JSMOKE)

    if(ENABLE_KIO_JSMOKE)
        add_subdirectory(kio)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KIO")
    endif(ENABLE_KIO_JSMOKE)

    if(ENABLE_KPARTS_JSMOKE)
        add_subdirectory(kparts)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KParts")
    endif(ENABLE_KPARTS_JSMOKE)

    if(ENABLE_KFILE_JSMOKE)
        add_subdirectory(kfile)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KFile")
    endif(ENABLE_KFILE_JSMOKE)

    if(ENABLE_KNEWSTUFF2_JSMOKE)
        add_subdirectory(knewstuff2)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KNewStuff2")
    endif(ENABLE_KNEWSTUFF2_JSMOKE)

    if(ENABLE_KNEWSTUFF3_JSMOKE)
        add_subdirectory(knewstuff3)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KNewStuff3")
    endif(ENABLE_KNEWSTUFF3_JSMOKE)

    if(ENABLE_KUTILS_JSMOKE)
        add_subdirectory(kutils)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KUtils")
    endif(ENABLE_KUTILS_JSMOKE)

    if(ENABLE_KHTML_JSMOKE)
        add_subdirectory(khtml)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KHTML")
    endif(ENABLE_KHTML_JSMOKE)

    if(ENABLE_KTEXTEDITOR_JSMOKE)
        add_subdirectory(ktexteditor)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, KTextEditor")
    endif(ENABLE_KTEXTEDITOR_JSMOKE)

    if(ENABLE_NEPOMUK_JSMOKE)
        add_subdirectory(nepomuk)
        add_subdirectory(nepomukquery)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Nepomuk")
    endif(ENABLE_NEPOMUK_JSMOKE)

    if(ENABLE_ATTICA_JSMOKE)
        add_subdirectory( attica )
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Attica")
    endif(ENABLE_ATTICA_JSMOKE)

    if(ENABLE_PHONON_JSMOKE)
        add_subdirectory( phonon )
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Phonon")
    endif(ENABLE_PHONON_JSMOKE)

    if(ENABLE_SOPRANO_JSMOKE)
        add_subdirectory(soprano)
        add_subdirectory(sopranoclient)
        add_subdirectory(sopranoserver)
        set(JSMOKE_ENABLED "${JSMOKE_ENABLED}, Soprano")
    endif(ENABLE_SOPRANO_JSMOKE)

endif(ENABLE_JSMOKE)

message(STATUS "Build JSmoke... " ${JSMOKE_ENABLED})
