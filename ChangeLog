2009-10-05  Richard Dale  <richard.j.dale@gmail.com>

* Fixed off by one error in the virtual method override argument marshalling
* Unconditionally return false from QtScriptSmokeBinding::callMethod() until we
fix subclassing and the test for whether a virtual method has been overriden
* Use 'QtScriptSmoke' as a namespace as it's the name of the project, and 
rename the QtScriptSmoke class as RunQtScriptSmoke.
* Added QtScriptSmoke::resolveMethod() to resolve the QtScript function call
with methods in the Smoke lib matching the name and argument types.
* Change the QtScript:: namespace to QtScriptSmoke:: and put everything in that
* Rename StaticClass as QtScriptSmoke::MetaObject and ImplementationClass as 
QtScriptSmoke::Object

2009-10-04  Richard Dale  <richard.j.dale@gmail.com>

* The marshalling of C++ instances to QScriptValues is now working. It is
possible to obtain a QSize instance via dialog.size() in the example script
and then call width() on the returned QSize.
* The Marshall::var() method now returns a 'QScriptValue *' rather than a value.

2009-10-03  Richard Dale  <richard.j.dale@gmail.com>

* Method calls are now working via QtScript::MethodCall and the Smoke 
marshalling framework is working. So the basics are looking pretty good, just
the overloaded method resolution code needs finishing
* The virtual method overriding code is quite close to working, and we just 
need a way to determine if a method has been overloaded in QtScript, which is
probably obvious, but needs investigating.

2009-10-02  Richard Dale  <richard.j.dale@gmail.com>

* Added code to call an overriden virtual method. Not working yet, not sure how
to tell if the method has been overriden or not.
* Added some debugging enum values to control debugging areas, and switch 
debugging on
* Unmap the pointer for a C++ instance which has been deleted
 
2009-09-29  Richard Dale  <richard.j.dale@gmail.com>

* Added a global hash to map C++ pointers onto the corresponding QScriptValues

2009-09-28  Richard Dale  <richard.j.dale@gmail.com>

* Added some more marshallers, now complete all primitve types and strings.
* Timed startup with creating 500 'StaticClass' classes, and found the time
taken to be negligable. Left the code in qtscript-smoke.cpp commented out, so
that Ian can try.

2009-09-27  Richard Dale  <richard.j.dale@gmail.com>

* Add virtual method call marshallers
* Began some implementation of the marshalling code for QScript to the Smoke
stack

2009-09-24  Richard Dale  <richard.j.dale@gmail.com>

* Added a marshalling framework based on the PerlQt design. It doesn't work
yet though.
* Added a ChangeLog to the project, now it seems to be a bit more than a 
prototype